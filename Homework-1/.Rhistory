theme_classic() +
theme(legend.position = "none") +
ggtitle("Month vs Area")
p3 <- ggplot(forestfires, aes(DC, area)) +
geom_point(color = "#d63447", alpha = 0.5) +
ggtitle("DC vs Area") +
theme_classic()
p4 <- ggplot(forestfires, aes(RH, area)) +
geom_point(color = "#d63447", alpha = 0.5) +
ggtitle("RH vs Area") +
theme_classic()
# Arrange plots P1-P4 into a 2x2 grid
fig <- ggarrange(p1, p2, p3, p4, ncol = 2, nrow = 2)
plot(fig)
rm(list = c("p1", "p2", "p3", "p4", "fig"))
ggplot(forestfires, aes(DMC)) +
geom_histogram(fill = "#08d9d6") +
theme_classic()
ggplot(forestfires, aes(DMC)) +
geom_histogram(color = "black", fill = "#08d9d6") +
theme_classic()
ggplot(forestfires, aes(DMC)) +
geom_histogram(color = "black", fill = "#08d9d6") +
theme_classic()
ggplot(forestfires, aes(log(DMC))) +
geom_histogram(color = "black", fill = "#08d9d6") +
theme_classic()
ggplot(forestfires, aes(DMC)) +
geom_histogram(color = "black", fill = "#08d9d6") +
theme_classic()
forestfires$logDMC <- log(forestfires$DMC)
ggplot(forestfires, aes(logDMC)) +
geom_histogram(color = "black", fill = "#08d9d6") +
theme_classic()
ggplot(forestfires, aes(DMC)) +
geom_histogram(color = "black", fill = "#08d9d6") +
theme_classic()
forestfires$logDMC <- log(forestfires$DMC)
ggplot(forestfires, aes(logDMC)) +
geom_histogram(color = "black", fill = "#08d9d6") +
theme_classic()
ggplot(forestfires, aes(log(DMC))) +
geom_histogram(color = "black", fill = "#08d9d6") +
theme_classic()
ggplot(forestfires, aes(DMC)) +
geom_histogram(color = "black", fill = "#08d9d6") +
theme_classic()
ggplot(forestfires, aes(logDMC)) +
geom_histogram(color = "black", fill = "#08d9d6") +
theme_classic()
ggplot(forestfires, aes(log(DMC))) +
geom_histogram(color = "black", fill = "#08d9d6") +
theme_classic()
ggplot(forestfires, aes(DMC)) +
geom_histogram(color = "black", fill = "#08d9d6") +
theme_classic()
ggplot(forestfires, aes(log(DMC))) +
geom_histogram(color = "black", fill = "#08d9d6") +
theme_classic()
ggplot(forestfires, aes(DMC)) +
geom_histogram(binwidth = 50, color = "black", fill = "#08d9d6") +
theme_classic()
ggplot(forestfires, aes(log(DMC))) +
geom_histogram(binwidth = 0.5, color = "black", fill = "#08d9d6") +
theme_classic()
ggplot(forestfires, aes(DMC)) +
geom_histogram(binwidth = 50, color = "black", fill = "#08d9d6") +
theme_classic()
ggplot(forestfires, aes(log10(DMC))) +
geom_histogram(binwidth = 0.5, color = "black", fill = "#08d9d6") +
theme_classic()
ggplot(forestfires, aes(DMC)) +
geom_histogram(binwidth = 50, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("DMC Histogram")
ggplot(forestfires, aes(log10(DMC))) +
geom_histogram(binwidth = 0.5, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("LOG DMC Histogram")
# Plot normal histogram
ggplot(forestfires, aes(DMC)) +
geom_histogram(binwidth = 50, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("DMC Histogram")
# Plot log scale histogram
ggplot(forestfires, aes(log10(DMC))) +
geom_histogram(binwidth = 0.5, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("LOG DMC Histogram")
# Plot normal histogram
ggplot(forestfires, aes(DMC)) +
geom_histogram(binwidth = 50, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("DMC Histogram")
# Plot log scale histogram
ggplot(forestfires, aes(log10(DMC))) +
geom_histogram(binwidth = 0.5, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("LOG DMC Histogram") +
scale_x_log10()
# Plot normal histogram
ggplot(forestfires, aes(DMC)) +
geom_histogram(binwidth = 50, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("DMC Histogram")
# Plot log scale histogram
ggplot(forestfires, aes(DMC)) +
geom_histogram(binwidth = 0.5, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("LOG DMC Histogram") +
scale_x_log10()
# Plot normal histogram
ggplot(forestfires, aes(DMC)) +
geom_histogram(binwidth = 50, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("DMC Histogram")
# Plot log scale histogram
ggplot(forestfires, aes(log10(DMC))) +
geom_histogram(binwidth = 0.5, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("LOG DMC Histogram") +
scale_x_log10()
# Plot normal histogram
ggplot(forestfires, aes(DMC)) +
geom_histogram(binwidth = 50, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("DMC Histogram")
# Plot log scale histogram
ggplot(forestfires, aes(log10(DMC))) +
geom_histogram(binwidth = 1, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("LOG DMC Histogram") +
scale_x_log10()
# Plot normal histogram
ggplot(forestfires, aes(DMC)) +
geom_histogram(binwidth = 50, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("DMC Histogram")
# Plot log scale histogram
ggplot(forestfires, aes(log10(DMC))) +
geom_histogram(binwidth = 0.25, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("LOG DMC Histogram") +
scale_x_log10()
# Plot normal histogram
ggplot(forestfires, aes(DMC)) +
geom_histogram(binwidth = 50, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("DMC Histogram")
# Plot log scale histogram
ggplot(forestfires, aes(log10(DMC))) +
geom_histogram(color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("LOG DMC Histogram") +
scale_x_log10()
# Plot normal histogram
ggplot(forestfires, aes(DMC)) +
geom_histogram(binwidth = 50, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("DMC Histogram")
# Plot log scale histogram
ggplot(forestfires, aes(log10(DMC))) +
geom_histogram(binwidth = 0.25, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("LOG DMC Histogram") +
scale_x_log10()
# Plot normal histogram
ggplot(forestfires, aes(DMC)) +
geom_histogram(binwidth = 50, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("DMC Histogram")
# Plot log scale histogram
ggplot(forestfires, aes(log10(DMC))) +
geom_histogram(bins = 5, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("LOG DMC Histogram") +
scale_x_log10()
# Plot normal histogram
ggplot(forestfires, aes(DMC)) +
geom_histogram(binwidth = 50, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("DMC Histogram")
# Plot log scale histogram
ggplot(forestfires, aes(log10(DMC))) +
geom_histogram(bins = 6, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("LOG DMC Histogram") +
scale_x_log10()
# Plot normal histogram
ggplot(forestfires, aes(DMC)) +
geom_histogram(binwidth = 50, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("DMC Histogram")
# Plot log scale histogram
ggplot(forestfires, aes(log10(DMC))) +
geom_histogram(bins = 7, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("LOG DMC Histogram") +
scale_x_log10()
# Plot normal histogram
ggplot(forestfires, aes(DMC)) +
geom_histogram(binwidth = 50, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("DMC Histogram")
# Plot log scale histogram
ggplot(forestfires, aes(log10(DMC))) +
geom_histogram(bins = 8, color = "black", fill = "#08d9d6") +
theme_classic() +
ggtitle("LOG DMC Histogram") +
scale_x_log10()
styler:::style_active_file()
M0_quasi_twitter <- data.frame(read.csv("./data/M0_quasi_twitter.csv"))
M01_quasi_twitter <- data.frame(read.csv("./data/M01_quasi_twitter.csv"))
View(M01_quasi_twitter)
M01_quasi_twitter <- data.frame(read.csv("./data/M01_quasi_twitter.csv"))
ggplot(M01_quasi_twitter, aes(friends_count)) +
geom_histogram()
ggplot(M01_quasi_twitter, aes(friends_count)) +
geom_histogram(bins=5)
ggplot(M01_quasi_twitter, aes(friends_count)) +
geom_histogram(binwidth=100)
ggplot(M01_quasi_twitter, aes(friends_count)) +
geom_histogram(binwidth=500)
ggplot(M01_quasi_twitter, aes(friends_count)) +
geom_boxplot(binwidth=500)
ggplot(M01_quasi_twitter, aes(friends_count)) +
geom_boxplot()
ggplot(M01_quasi_twitter, aes(log10(friends_count))) +
geom_histogram() +
scale_x_log10()
friends_count <- filter(M01_quasi_twitter, friends_count >= 0)
# Import the Twitter Data csv
M01_quasi_twitter <- data.frame(read.csv("./data/M01_quasi_twitter.csv"))
friends_count <- filter(M01_quasi_twitter, friends_count >= 0)
ggplot(friends_count, aes(log10(friends_count))) +
geom_histogram() +
scale_x_log10()
# Import the Twitter Data csv
M01_quasi_twitter <- data.frame(read.csv("./data/M01_quasi_twitter.csv"))
friends_count <- filter(M01_quasi_twitter, friends_count >= 0)
ggplot(M01_quasi_twitter, aes(friends_count)) +
geom_histogram() +
scale_x_log10()
# Import the Twitter Data csv
M01_quasi_twitter <- data.frame(read.csv("./data/M01_quasi_twitter.csv"))
friends_count <- filter(M01_quasi_twitter, friends_count >= 0)
ggplot(M01_quasi_twitter, aes(friends_count)) +
geom_histogram()
# Import the Twitter Data csv
M01_quasi_twitter <- data.frame(read.csv("./data/M01_quasi_twitter.csv"))
friends_count <- filter(M01_quasi_twitter, friends_count >= 10)
ggplot(friends_count, aes(log10(friends_count))) +
geom_histogram() +
scale_x_log10()
# Import the Twitter Data csv
M01_quasi_twitter <- data.frame(read.csv("./data/M01_quasi_twitter.csv"))
friends_count <- filter(M01_quasi_twitter, friends_count > 0)
ggplot(friends_count, aes(log10(friends_count))) +
geom_histogram() +
scale_x_log10()
# Import the Twitter Data csv
M01_quasi_twitter <- data.frame(read.csv("./data/M01_quasi_twitter.csv"))
friends_count <- filter(M01_quasi_twitter, friends_count >= 0)
ggplot(friends_count, aes(log10(friends_count))) +
geom_histogram() +
scale_x_log10()
install.packages("fitdistrplus")
library(fitdistrplus)
descdist(M01_quasi_twitter$friends_count)
fitdist(M01_quasi_twitter$friends_count)
# Import the Twitter Data csv
M01_quasi_twitter <- data.frame(read.csv("./data/M01_quasi_twitter.csv"))
friends_count <- filter(M01_quasi_twitter, friends_count >= 0)
ggplot(friends_count, aes(log10(friends_count))) +
geom_histogram() +
scale_x_log10()
library(fitdistrplus)
descdist(M01_quasi_twitter$friends_count)
fitdist(M01_quasi_twitter$friends_count, "normal")
fitdist(M01_quasi_twitter$friends_count, "norm")
descdist(M01_quasi_twitter$friends_count)
fitdist(M01_quasi_twitter$friends_count, "norm")
fitdist(M01_quasi_twitter$friends_count, "beta")
fitdist(M01_quasi_twitter$friends_count, "lognorm")
fitdist(M01_quasi_twitter$friends_count, "log")
fitdist(M01_quasi_twitter$friends_count, "lnorm")
plot(fitdist(M01_quasi_twitter$friends_count, "norm"))
View(M01_quasi_twitter)
# Import the Twitter Data csv
M01_quasi_twitter <- data.frame(read.csv("./data/M01_quasi_twitter.csv"))
friends_count <- filter(M01_quasi_twitter, friends_count >= 0)
ggplot(friends_count, aes(log10(friends_count))) +
geom_histogram() +
scale_x_log10()
library(fitdistrplus)
descdist(M01_quasi_twitter$friends_count)
# Let's try and verify these observations for X
fit_n <- fitdist(M01_quasi_twitter$friends_count, "norm")
fit_nbinom <- fitdist(M01_quasi_twitter$friends_count, "nbinom")
fit_beta <- fitdist(M01_quasi_twitter$friends_count, "beta")
fit_beta <- fitdist(M01_quasi_twitter$friends_count, "lnorm")
# Let's try and verify these observations for X
fit_n <- fitdist(friends_count$friends_count, "norm")
fit_lnorm <- fitdist(friends_count$friends_count, "lnorm")
friends_count <- filter(M01_quasi_twitter, friends_count >= 0)
# Let's try and verify these observations for X
fit_n <- fitdist(friends_count$friends_count, "norm")
fit_lnorm <- fitdist(friends_count$friends_count, "lnorm")
View(friends_count)
friends_count <- filter(M01_quasi_twitter, friends_count > 0)
# Let's try and verify these observations for X
fit_n <- fitdist(friends_count$friends_count, "norm")
fit_lnorm <- fitdist(friends_count$friends_count, "lnorm")
summary(fit_n)
summary(fit_lnorm)
# Import the Twitter Data csv
M01_quasi_twitter <- data.frame(read.csv("./data/M01_quasi_twitter.csv"))
friends_count <- filter(M01_quasi_twitter, friends_count > 0)
ggplot(friends_count, aes(log10(friends_count))) +
geom_histogram() +
scale_x_log10()
library(fitdistrplus)
descdist(friends_count$friends_count)
# Let's try and verify these observations for X
fit_n <- fitdist(friends_count$friends_count, "norm")
fit_lnorm <- fitdist(friends_count$friends_count, "lnorm")
summary(fit_n)
summary(fit_lnorm)
# goodness-of-fit plots for X
par(mfrow = c(2, 2))
plot.legend <- c("poisson")
denscomp(list(fit_n), legendtext = plot.legend, xlab = "X")
cdfcomp(list(fit_n), legendtext = plot.legend, xlab = "X")
qqcomp(list(fit_n), legendtext = plot.legend, xlab = "X")
# Import the Twitter Data csv
M01_quasi_twitter <- data.frame(read.csv("./data/M01_quasi_twitter.csv"))
friends_count <- filter(M01_quasi_twitter, friends_count > 0)
ggplot(friends_count, aes(log10(friends_count))) +
geom_histogram() +
scale_x_log10()
library(fitdistrplus)
descdist(friends_count$friends_count)
# Let's try and verify these observations for X
fit_n <- fitdist(friends_count$friends_count, "norm")
fit_lnorm <- fitdist(friends_count$friends_count, "lnorm")
summary(fit_n)
summary(fit_lnorm)
# goodness-of-fit plots for X
par(mfrow = c(2, 2))
plot.legend <- c("norm")
denscomp(list(fit_lnorm), legendtext = plot.legend, xlab = "X")
cdfcomp(list(fit_lnorm), legendtext = plot.legend, xlab = "X")
qqcomp(list(fit_lnorm), legendtext = plot.legend, xlab = "X")
# Import the Twitter Data csv
M01_quasi_twitter <- data.frame(read.csv("./data/M01_quasi_twitter.csv"))
friends_count <- filter(M01_quasi_twitter, friends_count > 0)
ggplot(friends_count, aes(log10(friends_count))) +
geom_histogram() +
scale_x_log10()
library(fitdistrplus)
descdist(friends_count$friends_count)
# Let's try and verify these observations for X
fit_n <- fitdist(friends_count$friends_count, "norm")
fit_lnorm <- fitdist(friends_count$friends_count, "lnorm")
summary(fit_n)
summary(fit_lnorm)
# goodness-of-fit plots for X
par(mfrow = c(2, 2))
plot.legend <- c("norm")
denscomp(list(fit_lnorm), legendtext = plot.legend, xlab = "X")
cdfcomp(list(fit_lnorm), legendtext = plot.legend, xlab = "X")
ppcomp(list(fit_lnorm), legendtext = plot.legend, xlab = "X")
# goodness-of-fit plots for X
plot(fit_lnorm)
plot(fit_n)
# Import the Twitter Data csv
M01_quasi_twitter <- data.frame(read.csv("./data/M01_quasi_twitter.csv"))
friends_count <- filter(M01_quasi_twitter, friends_count > 0)
ggplot(friends_count, aes(log10(friends_count))) +
geom_histogram() +
scale_x_log10()
library(fitdistrplus)
descdist(friends_count$friends_count)
# Let's try and verify these observations for X
fit_n <- fitdist(friends_count$friends_count, "norm")
fit_lnorm <- fitdist(friends_count$friends_count, "lnorm")
summary(fit_n)
summary(fit_lnorm)
# goodness-of-fit plots for X
plot(fit_lnorm)
plot(fit_n)
library(ggplot2)
library(GGally)
library(ggpubr)
library(dplyr)
library(reshape2)
library(fitdistrplus)
library(RColorBrewer)
# Import the Twitter Data csv
M01_quasi_twitter <- data.frame(read.csv("./data/M01_quasi_twitter.csv"))
# Filter out negative values
friends_count <- filter(M01_quasi_twitter, friends_count > 0)
# Since the data is skewed, we can't plot the normal histogram.
# So we plot the log scale histogram
ggplot(friends_count, aes(log10(friends_count))) +
geom_histogram() +
scale_x_log10()
# Use the descdist function from the fitdistrplus package to fit a distribution
descdist(friends_count$friends_count)
# Let's try and verify these observations
fit_n <- fitdist(friends_count$friends_count, "norm")
fit_lnorm <- fitdist(friends_count$friends_count, "lnorm")
# Plot the summaries
summary(fit_n)
summary(fit_lnorm)
# goodness-of-fit plots for
plot(fit_lnorm)
plot(fit_n)
# Import the Twitter Data csv
M01_quasi_twitter <- data.frame(read.csv("./data/M01_quasi_twitter.csv"))
# Filter out negative values
friends_count <- filter(M01_quasi_twitter, friends_count > 0)
# Since the data is skewed, we can't plot the normal histogram.
# So we plot the log scale histogram
ggplot(friends_count, aes(log10(friends_count))) +
geom_histogram() +
scale_x_log10()
# Use the descdist function from the fitdistrplus package to fit a distribution
descdist(friends_count$friends_count)
# Let's try and verify these observations
fit_n <- fitdist(friends_count$friends_count, "norm")
fit_lnorm <- fitdist(friends_count$friends_count, "lnorm")
# Plot the summaries
summary(fit_n)
summary(fit_lnorm)
# goodness-of-fit plots for
plot(fit_n)
plot(fit_lnorm)
# Import the Twitter Data csv
M01_quasi_twitter <- data.frame(read.csv("./data/M01_quasi_twitter.csv"))
# Filter out negative values
friends_count <- filter(M01_quasi_twitter, friends_count > 0)
# Since the data is skewed, we can't plot the normal histogram.
# So we plot the log scale histogram
ggplot(friends_count, aes(log10(friends_count))) +
geom_histogram() +
scale_x_log10()
# Use the descdist function from the fitdistrplus package to fit a distribution
descdist(friends_count$friends_count)
# Let's try and verify these observations
fit_n <- fitdist(friends_count$friends_count, "norm")
fit_lnorm <- fitdist(friends_count$friends_count, "lnorm")
# Plot the summaries
summary(fit_n)
summary(fit_lnorm)
# goodness-of-fit plots for
plot(fit_n)
plot(fit_lnorm)
rm(friends_count)
# Import the Twitter Data csv
M01_quasi_twitter <- data.frame(read.csv("./data/M01_quasi_twitter.csv"))
# Filter out negative values
friends_count <- filter(M01_quasi_twitter, friends_count > 0)
# Since the data is skewed, we can't plot the normal histogram.
# So we plot the log scale histogram
ggplot(friends_count, aes(log10(friends_count))) +
geom_histogram() +
scale_x_log10()
# Use the descdist function from the fitdistrplus package to fit a distribution
descdist(friends_count$friends_count)
# Let's try and verify these observations
fit_n <- fitdist(friends_count$friends_count, "norm")
fit_lnorm <- fitdist(friends_count$friends_count, "lnorm")
# Plot the summaries
summary(fit_n)
summary(fit_lnorm)
# goodness-of-fit plots for
plot(fit_n)
plot(fit_lnorm)
rm(friends_count)
# goodness-of-fit plots for
plot(fit_n, main = "Normal")
)
plot(fit_n)
title(main = "Normal Dist")
# Import the Twitter Data csv
M01_quasi_twitter <- data.frame(read.csv("./data/M01_quasi_twitter.csv"))
# Filter out negative values
friends_count <- filter(M01_quasi_twitter, friends_count > 0)
# Since the data is skewed, we can't plot the normal histogram.
# So we plot the log scale histogram
ggplot(friends_count, aes(log10(friends_count))) +
geom_histogram() +
scale_x_log10()
# Use the descdist function from the fitdistrplus package to fit a distribution
descdist(friends_count$friends_count)
# Let's try and verify these observations
fit_n <- fitdist(friends_count$friends_count, "norm")
fit_lnorm <- fitdist(friends_count$friends_count, "lnorm")
# Plot the summaries
summary(fit_n)
summary(fit_lnorm)
# goodness-of-fit plots for
plot(fit_n)
title(main = "Normal Dist")
plot(fit_lnorm)
title(main = "Log Normal Dist")
rm(friends_count)
rm(friends_count, fit_lnorm)
rm(friends_count, fit_lnorm, fit_n)
styler:::style_active_file()
styler:::style_active_file()
