quantiles <- quantile(forestfires$wind)
# Print
cat("Minimum Wind Speed is :", quantiles[[1]], "\n")
cat("1st Quantile of Wind Speed is :", quantiles[[2]], "\n")
cat("Mean Wind Speed is :", mean(forestfires$wind), "\n")
cat("Median Wind Speed is :", quantiles[[3]], "\n")
cat("3rd Quartile of Wind Speed is :", quantiles[[4]], "\n")
cat("Maximum Wind Speed is :", quantiles[[5]], "\n")
rm(quantiles)
# Create the Histogram and Density Plot
wind_hist_plus_density <- ggplot(forestfires, aes(x = wind, y = ..density..)) +
geom_histogram(bins = 10, colour = "black", fill = "#08d9d6") +
geom_density(aes(y = ..density..), color = "black") +
ylab("Density") +
xlab("Wind Speed (km/hour)") +
ggtitle("Histogram of Wind Speed") +
theme_bw()
plot(wind_hist_plus_density)
rm(wind_hist_plus_density)
# Create month wise density plot
month_density_plot <- ggplot(forestfires, aes(
x = wind,
y = ..density..,
fill = month
)) +
geom_density(alpha = 0.8) +
scale_fill_brewer(palette = "Set3") +
theme_classic() +
ggtitle("Wind Speed Density Plots for each month") +
labs(x = "Wind Speed (km/hour)", y = "Density", fill = "Month") +
scale_x_continuous(expand = c(0, 0), limits = c(0, NA)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, NA))
plot(month_density_plot)
rm(month_density_plot)
# Plot ScatterMatrix
ggpairs(forestfires,
title = "Scatterplot Matrix",
columns = c("temp", "RH", "DC", "DMC")
)
# Create a temporary dataframe and reshape it
df <- select(forestfires, c(wind, ISI, DC))
# Create a temporary dataframe and reshape it
suppressMessages({
df <- melt(forestfires)
})
# Plot 3 boxplots for Wind, ISI, and DC
ggplot(df %>% filter(variable == "wind"), aes(x = variable, y = value, fill = variable)) +
geom_boxplot() +
theme_classic() +
theme(
legend.position = "none",
axis.ticks.x = element_blank(),
axis.text.x = element_blank()
) +
ggtitle("Wind Speed Box Plot") +
labs(x = "Wind Speed", y = "Value")
ggplot(df %>% filter(variable == "ISI"), aes(x = variable, y = value, fill = variable)) +
geom_boxplot() +
theme_classic() +
theme(
legend.position = "none",
axis.ticks.x = element_blank(),
axis.text.x = element_blank()
) +
ggtitle("ISI Box Plot") +
labs(x = "ISI", y = "Value")
ggplot(df %>% filter(variable == "DC"), aes(x = variable, y = value, fill = variable)) +
geom_boxplot() +
theme_classic() +
theme(
legend.position = "none",
axis.ticks.x = element_blank(),
axis.text.x = element_blank()
) +
ggtitle("DC Box Plot") +
labs(x = "DC", y = "Value")
rm(df)
# Create a temporary dataframe and reshape it
suppressMessages({
df <- melt(forestfires)
})
# Create a temporary dataframe for the data
df <- data.frame("country" = c("UK", "Canada", "India", "Australia", "US"),
"num_accounts" = c(650, 1000, 900, 300, 14900))
# Mutate the dataframe to create a percentages columns
df <- df %>%
group_by(country) %>%
arrange(desc(country)) %>%
mutate(prop = 100 * round(num_accounts / sum(df$num_accounts), 3)) %>%
mutate(percentage_labels = paste0(prop, "%"))
# Define the grid, 1 row x 2 columns
par(mfcol = c(1, 2))
# Regular Pie Chart
pie(df$prop,
labels = paste0(df$country, " ", df$percentage_labels),
col = brewer.pal(5, "Dark2"),
cex = 0.5)
# 3D Pie chart
pie3D(df$prop,
radius = 0.9,
labels = df$country,
main = "Country 3D Pie Chart")
rm(df)
# Create a temporary dataframe for the data
df <- data.frame("country" = c("UK", "Canada", "India", "Australia", "US"),
"num_accounts" = c(650, 1000, 900, 300, 14900))
# Mutate the dataframe to create a percentages columns
df <- df %>%
group_by(country) %>%
arrange(desc(country)) %>%
mutate(prop = 100 * round(num_accounts / sum(df$num_accounts), 3)) %>%
mutate(percentage_labels = paste0(prop, "%"))
# Define the grid, 1 row x 2 columns
par(mfcol = c(1, 2))
# Regular Pie Chart
pie(df$prop,
labels = paste0(df$country, " ", df$percentage_labels),
col = brewer.pal(5, "Dark2"),
cex = 0.8)
# 3D Pie chart
pie3D(df$prop,
radius = 0.9,
labels = df$country,
main = "Country 3D Pie Chart")
rm(df)
# Create a temporary dataframe for the data
df <- data.frame("country" = c("UK", "Canada", "India", "Australia", "US"),
"num_accounts" = c(650, 1000, 900, 300, 14900))
# Mutate the dataframe to create a percentages columns
df <- df %>%
group_by(country) %>%
arrange(desc(country)) %>%
mutate(prop = 100 * round(num_accounts / sum(df$num_accounts), 3)) %>%
mutate(percentage_labels = paste0(prop, "%"))
# Define the grid, 1 row x 2 columns
par(mfcol = c(1, 2))
# Regular Pie Chart
pie(df$prop,
labels = paste0(df$country, " ", df$percentage_labels),
col = brewer.pal(5, "Dark2"),
cex = 0.7)
# 3D Pie chart
pie3D(df$prop,
radius = 0.9,
labels = df$country,
main = "Country 3D Pie Chart")
rm(df)
# Create a temporary dataframe for the data
df <- data.frame("country" = c("UK", "Canada", "India", "Australia", "US"),
"num_accounts" = c(650, 1000, 900, 300, 14900))
# Mutate the dataframe to create a percentages columns
df <- df %>%
group_by(country) %>%
arrange(desc(country)) %>%
mutate(prop = 100 * round(num_accounts / sum(df$num_accounts), 3)) %>%
mutate(percentage_labels = paste0(prop, "%"))
# Define the grid, 1 row x 2 columns
par(mfcol = c(1, 2))
# Regular Pie Chart
pie(df$prop,
labels = paste0(df$country, " ", df$percentage_labels),
col = brewer.pal(5, "Dark2"),
cex = 0.6)
# 3D Pie chart
pie3D(df$prop,
radius = 0.9,
labels = df$country,
main = "Country 3D Pie Chart")
rm(df)
# Create a temporary dataframe for the data
df <- data.frame("country" = c("UK", "Canada", "India", "Australia", "US"),
"num_accounts" = c(650, 1000, 900, 300, 14900))
# Mutate the dataframe to create a percentages columns
df <- df %>%
group_by(country) %>%
arrange(desc(country)) %>%
mutate(prop = 100 * round(num_accounts / sum(df$num_accounts), 3)) %>%
mutate(percentage_labels = paste0(prop, "%"))
# Define the grid, 1 row x 2 columns
par(mfcol = c(1, 2))
# Regular Pie Chart
pie(df$prop,
labels = paste0(df$country, " ", df$percentage_labels),
col = brewer.pal(5, "Dark2"),
cex = 0.5)
# 3D Pie chart
pie3D(df$prop,
radius = 0.9,
labels = df$country,
main = "Country 3D Pie Chart")
rm(df)
# Create a temporary dataframe for the data
df <- data.frame("country" = c("UK", "Canada", "India", "Australia", "US"),
"num_accounts" = c(650, 1000, 900, 300, 14900))
# Mutate the dataframe to create a percentages columns
df <- df %>%
group_by(country) %>%
arrange(desc(country)) %>%
mutate(prop = 100 * round(num_accounts / sum(df$num_accounts), 3)) %>%
mutate(percentage_labels = paste0(prop, "%"))
# Define the grid, 1 row x 2 columns
par(mfcol = c(1, 2))
# Regular Pie Chart
pie(df$prop,
labels = paste0(df$country, " ", df$percentage_labels),
col = brewer.pal(5, "Dark2"),
cex = 0.6)
# 3D Pie chart
pie3D(df$prop,
radius = 0.9,
labels = df$country,
main = "Country 3D Pie Chart")
rm(df)
# Create a temporary dataframe for the data
df <- data.frame("country" = c("UK", "Canada", "India", "Australia", "US"),
"num_accounts" = c(650, 1000, 900, 300, 14900))
# Mutate the dataframe to create a percentages columns
df <- df %>%
group_by(country) %>%
arrange(desc(country)) %>%
mutate(prop = 100 * round(num_accounts / sum(df$num_accounts), 3)) %>%
mutate(percentage_labels = paste0(prop, "%"))
# Define the grid, 1 row x 2 columns
par(mfcol = c(1, 2))
# 3D Pie chart
pie3D(df$prop,
radius = 0.9,
labels = df$country,
main = "Country 3D Pie Chart")
# Regular Pie Chart
pie(df$prop,
labels = paste0(df$country, " ", df$percentage_labels),
col = brewer.pal(5, "Dark2"),
cex = 0.6)
rm(df)
# Create a temporary dataframe for the data
df <- data.frame("country" = c("UK", "Canada", "India", "Australia", "US"),
"num_accounts" = c(650, 1000, 900, 300, 14900))
# Mutate the dataframe to create a percentages columns
df <- df %>%
group_by(country) %>%
arrange(desc(country)) %>%
mutate(prop = 100 * round(num_accounts / sum(df$num_accounts), 3)) %>%
mutate(percentage_labels = paste0(prop, "%"))
# Define the grid, 1 row x 2 columns
par(mfcol = c(1, 2), mar = c(2, 2, 2, 2))
# 3D Pie chart
pie3D(df$prop,
radius = 0.9,
labels = df$country,
main = "Country 3D Pie Chart")
# Regular Pie Chart
pie(df$prop,
labels = paste0(df$country, " ", df$percentage_labels),
col = brewer.pal(5, "Dark2"),
cex = 0.6)
rm(df)
# Create a temporary dataframe for the data
df <- data.frame("country" = c("UK", "Canada", "India", "Australia", "US"),
"num_accounts" = c(650, 1000, 900, 300, 14900))
# Mutate the dataframe to create a percentages columns
df <- df %>%
group_by(country) %>%
arrange(desc(country)) %>%
mutate(prop = 100 * round(num_accounts / sum(df$num_accounts), 3)) %>%
mutate(percentage_labels = paste0(prop, "%"))
# Define the grid, 1 row x 2 columns
par(mfcol = c(1, 2), mar = c(4, 4, 4, 4))
# 3D Pie chart
pie3D(df$prop,
radius = 0.9,
labels = df$country,
main = "Country 3D Pie Chart")
# Regular Pie Chart
pie(df$prop,
labels = paste0(df$country, " ", df$percentage_labels),
col = brewer.pal(5, "Dark2"),
cex = 0.6)
rm(df)
# Create a temporary dataframe for the data
df <- data.frame("country" = c("UK", "Canada", "India", "Australia", "US"),
"num_accounts" = c(650, 1000, 900, 300, 14900))
# Mutate the dataframe to create a percentages columns
df <- df %>%
group_by(country) %>%
arrange(desc(country)) %>%
mutate(prop = 100 * round(num_accounts / sum(df$num_accounts), 3)) %>%
mutate(percentage_labels = paste0(prop, "%"))
# Define the grid, 1 row x 2 columns
par(mfcol = c(1, 2), mar = c(4, 4, 4, 4))
# 3D Pie chart
pie3D(df$prop,
radius = 0.9,
labels = df$country,
main = "Country 3D Pie Chart")
# Regular Pie Chart
pie(df$prop,
labels = paste0(df$country, " ", df$percentage_labels),
col = brewer.pal(5, "Dark2"),
cex = 1)
rm(df)
# Create a temporary dataframe for the data
df <- data.frame("country" = c("UK", "Canada", "India", "Australia", "US"),
"num_accounts" = c(650, 1000, 900, 300, 14900))
# Mutate the dataframe to create a percentages columns
df <- df %>%
group_by(country) %>%
arrange(desc(country)) %>%
mutate(prop = 100 * round(num_accounts / sum(df$num_accounts), 3)) %>%
mutate(percentage_labels = paste0(prop, "%"))
# Define the grid, 1 row x 2 columns
par(mfcol = c(1, 2), mar = c(6, 6, 6, 6))
# 3D Pie chart
pie3D(df$prop,
radius = 0.9,
labels = df$country,
main = "Country 3D Pie Chart")
# Regular Pie Chart
pie(df$prop,
labels = paste0(df$country, " ", df$percentage_labels),
col = brewer.pal(5, "Dark2"),
cex = 1)
rm(df)
# Create a temporary dataframe for the data
df <- data.frame("country" = c("UK", "Canada", "India", "Australia", "US"),
"num_accounts" = c(650, 1000, 900, 300, 14900))
# Mutate the dataframe to create a percentages columns
df <- df %>%
group_by(country) %>%
arrange(desc(country)) %>%
mutate(prop = 100 * round(num_accounts / sum(df$num_accounts), 3)) %>%
mutate(percentage_labels = paste0(prop, "%"))
# Define the grid, 1 row x 2 columns
par(mfcol = c(1, 2), mar = c(5, 5, 5, 5))
# 3D Pie chart
pie3D(df$prop,
radius = 0.9,
labels = df$country,
main = "Country 3D Pie Chart")
# Regular Pie Chart
pie(df$prop,
labels = paste0(df$country, " ", df$percentage_labels),
col = brewer.pal(5, "Dark2"),
cex = 1)
rm(df)
# Import the Twitter Data csv
M01_quasi_twitter <- data.frame(read.csv("./data/M01_quasi_twitter.csv"))
# Filter out negative values
friends_count <- filter(M01_quasi_twitter, friends_count > 0)
# Since the data is skewed, we can't plot the normal histogram.
# So we plot the log scale histogram
ggplot(friends_count, aes(log10(friends_count))) +
geom_histogram(color = "black", fill = "#08d9d6") +
scale_x_log10()
# Use the descdist function from the fitdistrplus package to fit a distribution
descdist(friends_count$friends_count)
# Let's try and verify these observations
fit_lnorm <- fitdist(friends_count$friends_count, "lnorm")
# Plot goodness-of-fit plots
plot(fit_lnorm)
rm(friends_count, fit_lnorm)
ggplot(M01_quasi_twitter, aes(x = created_at_year)) +
geom_density(alpha = 0.5, fill = "red")
ggplot(M01_quasi_twitter, aes(x = as.factor(created_at_year))) +
geom_density(alpha = 0.5, fill = "red")
ggplot(M01_quasi_twitter, aes(x = as.factor(created_at_year))) +
geom_density(aes(fill = created_at_year), alpha = 0.5)
ggplot(M01_quasi_twitter, aes(x = as.factor(created_at_year))) +
geom_density(aes(fill = as.factor(created_at_year)), alpha = 0.5)
summary(M01_quasi_twitter$created_at_year)
summary(as.factor(M01_quasi_twitter$created_at_year))
ggplot(M01_quasi_twitter, aes(x = as.factor(created_at_year))) +
geom_density(aes(fill = as.factor(created_at_year)), alpha = 0.5)
ggplot(M01_quasi_twitter, aes(x = as.factor(created_at_year))) +
geom_area(aes(fill = as.factor(created_at_year)), alpha = 0.5)
ggplot(M01_quasi_twitter, aes(x = as.factor(created_at_year))) +
geom_density(alpha = 0.5)
ggplot(M01_quasi_twitter, aes(x = as.factor(created_at_year))) +
geom_density(aes(fill = as.factor(created_at_year)), alpha = 0.5)
ggplot(M01_quasi_twitter, aes(x = created_at_year)) +
geom_density(aes(fill = as.factor(created_at_year)), alpha = 0.5)
ggplot(M01_quasi_twitter, aes(x = created_at_year)) +
geom_density(alpha = 0.5)
ggplot(M01_quasi_twitter, aes(x = created_at_year)) +
geom_density()
ggplot(M01_quasi_twitter, aes(x = created_at_year, fill = as.factor(created_at_year))) +
geom_density()
ggplot(M01_quasi_twitter, aes(x = created_at_year, group = created_at_year)) +
geom_density()
ggplot(M01_quasi_twitter, aes(x = created_at_yearr)) +
geom_density()
ggplot(M01_quasi_twitter, aes(x = created_at_year)) +
geom_density()
ggplot(M01_quasi_twitter, aes(x = created_at_year)) +
geom_density() +
scale_x_discrete()
ggplot(M01_quasi_twitter, aes(x = created_at_year)) +
scale_x_discrete() +
geom_density()
ggplot(M01_quasi_twitter, aes(x = created_at_year)) +
scale_x_discrete(labels = c("2006", "2007", "2008", "2009", "2010", "2011", "2012")) +
geom_density()
ggplot(M01_quasi_twitter, aes(x = created_at_year)) +
geom_density()
ggplot(M01_quasi_twitter, aes(x = created_at_year)) +
scale_x_discrete(labels = c("2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014, ", "2015", "2016", "2017"), breaks = c(2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017)) +
geom_density()
ggplot(M01_quasi_twitter, aes(x = created_at_year)) +
scale_x_discrete(labels = c("2006", "2007", "2008",
"2009", "2010", "2011",
"2012", "2013", "2014, ",
"2015", "2016", "2017"),
breaks = c(2006, 2007, 2008,
2009, 2010, 2011,
2012, 2013, 2014,
2015, 2016, 2017)) +
geom_density()
ggplot(M01_quasi_twitter, aes(x = created_at_year)) +
scale_x_discrete(labels = c("2006", "2007", "2008",
"2009", "2010", "2011",
"2012", "2013", "2014, ",
"2015", "2016", "2017"),
breaks = c(2006, 2007, 2008,
2009, 2010, 2011,
2012, 2013, 2014,
2015, 2016, 2017)) +
geom_density()
ggplot(M01_quasi_twitter, aes(x = as.factor(created_at_year))) +
scale_x_discrete(labels = c("2006", "2007", "2008",
"2009", "2010", "2011",
"2012", "2013", "2014, ",
"2015", "2016", "2017"),
breaks = c(2006, 2007, 2008,
2009, 2010, 2011,
2012, 2013, 2014,
2015, 2016, 2017)) +
geom_density()
ggplot(M01_quasi_twitter, aes(x = created_at_year)) +
scale_x_discrete(labels = c("2006", "2007", "2008",
"2009", "2010", "2011",
"2012", "2013", "2014, ",
"2015", "2016", "2017"),
breaks = c(2006, 2007, 2008,
2009, 2010, 2011,
2012, 2013, 2014,
2015, 2016, 2017)) +
geom_density()
ggplot(M01_quasi_twitter, aes(x = created_at_year)) +
scale_x_discrete( breaks = c(2006, 2007, 2008,
2009, 2010, 2011,
2012, 2013, 2014,
2015, 2016, 2017),
labels = c("2006", "2007", "2008",
"2009", "2010", "2011",
"2012", "2013", "2014, ",
"2015", "2016", "2017"),) +
geom_density()
ggplot(M01_quasi_twitter, aes(x = created_at_year)) +
geom_density() +
scale_x_discrete( breaks = c(2006, 2007, 2008,
2009, 2010, 2011,
2012, 2013, 2014,
2015, 2016, 2017),
labels = c("2006", "2007", "2008",
"2009", "2010", "2011",
"2012", "2013", "2014, ",
"2015", "2016", "2017"))
ggplot(M01_quasi_twitter, aes(x = created_at_year)) +
geom_density() +
scale_x_discrete( breaks = c(2006, 2007, 2008,
2009, 2010, 2011,
2012, 2013, 2014,
2015, 2016, 2017),
labels = c("2006", "2007", "2008",
"2009", "2010", "2011",
"2012", "2013", "2014",
"2015", "2016", "2017"))
ggplot(M01_quasi_twitter, aes(x = created_at_year)) +
geom_density() +
scale_x_discrete( breaks = [2006, 2007, 2008,
ggplot(M01_quasi_twitter, aes(x = created_at_year)) +
geom_density() +
scale_x_discrete( breaks = c(2006, 2007, 2008,
2009, 2010, 2011,
2012, 2013, 2014,
2015, 2016, 2017),
labels = c("2006", "2007", "2008",
"2009", "2010", "2011",
"2012", "2013", "2014",
"2015", "2016", "2017"))
ggplot(M01_quasi_twitter, aes(x = created_at_year)) +
geom_density() +
scale_x_continuous( breaks = c(2006, 2007, 2008,
2009, 2010, 2011,
2012, 2013, 2014,
2015, 2016, 2017),
labels = c("2006", "2007", "2008",
"2009", "2010", "2011",
"2012", "2013", "2014",
"2015", "2016", "2017"))
ggplot(M01_quasi_twitter, aes(x = created_at_year)) +
geom_density()
ggplot(M01_quasi_twitter, aes(x = created_at_year)) +
geom_density() +
scale_x_continuous( breaks = c(2006, 2007, 2008,
2009, 2010, 2011,
2012, 2013, 2014,
2015, 2016, 2017),
labels = c("2006", "2007", "2008",
"2009", "2010", "2011",
"2012", "2013", "2014",
"2015", "2016", "2017"))
