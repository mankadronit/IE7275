2012, 2013, 2014,
2015, 2016, 2017
),
labels = c(
"2006", "2007", "2008",
"2009", "2010", "2011",
"2012", "2013", "2014",
"2015", "2016", "2017"
)
)
# Import the raw_data.csv file
raw_data <- data.frame(read.csv("./data/raw_data.csv"), stringsAsFactors = FALSE)
# Standardize the data frame using the scale function
Ndata <- as.data.frame(scale(raw_data))
# Reshape the dataframe to a shape suitable for plotting
df <- melt(raw_data)
# Create box plots
ggplot(df, aes(variable, value, fill = "value")) +
geom_boxplot() +
theme_classic() +
ggtitle("Box Plot for raw_data") +
labs(x = "") +
theme(legend.position = "none")
rm(df)
# Reshape the dataframe to a shape suitable for plotting
df <- melt(Ndata)
# Create box plots
ggplot(df, aes(variable, value, fill = "value")) +
geom_boxplot() +
theme_classic() +
ggtitle("Box Plot for Ndata") +
labs(x = "") +
theme(legend.position = "none")
rm(df)
# Creating the scatterplots
ggplot(raw_data, aes(A, B)) +
geom_point() +
ggtitle("Scatterplot of A and B")
setwd("C:\\Users\\manka\\Documents\\IE7275\\Homework-2")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readxl)
library(dplyr)
library(readxl)
NHL <- read_xlsx("./data/NHL.xlsx", sheet = "data")
NHL <- read_xlsx("./data/NHL.xlsx", sheet = "Data")
NHL <- read_xlsx("./data/NHL.xlsx", sheet = "Data")
typeof(NHL)
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
View(NHL)
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
library(dplyr)
library(readxl)
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
NHL <- read_xlsx("./data/NHL.xlsx", sheet = "Data")
# Select the columns 13-26, the 1st column is the index column from excel
NHL <- NHL[, 13:26]
library(dplyr)
library(readxl)
library(psych)
install.packages("psych")
library(dplyr)
library(readxl)
library(psych)
# Import the NHL excel file as a dataframe
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
# Select the columns 13-26, the 1st column is the index column from excel
NHL <- NHL[, 13:26]
# Import the NHL excel file as a dataframe
suppressWarnings({
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
})
# Select the columns 13-26, the 1st column is the index column from excel
NHL <- NHL[, 13:26]
# Import the NHL excel file as a dataframe
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
# Select the columns 13-26, the 1st column is the index column from excel
NHL <- NHL[, 13:26]
# Import the NHL excel file as a dataframe
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
# Select the columns 13-26, the 1st column is the index column from excel
df <- NHL[, 13:26]
# Import the NHL excel file as a dataframe
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
# Select the columns 13-26, the 1st column is the index column from excel
df <- NHL[, 13:26]
fa.parallel(df, fa = "pc", main = "PCA of the NHL data")
# Import the NHL excel file as a dataframe
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
# Select the columns 13-26, the 1st column is the index column from excel
df <- NHL[, 13:26]
fa.parallel(df, fa = "pc")
# Import the NHL excel file as a dataframe
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
# Select the columns 13-26, the 1st column is the index column from excel
df <- NHL[, 13:26]
fa.parallel(df, fa = "pc")
principal(df, nfactors = 3, residuals = FALSE)
# Import the NHL excel file as a dataframe
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
# Select the columns 13-26, the 1st column is the index column from excel
df <- NHL[, 13:26]
fa.parallel(df, fa = "pc", niter = 100)
# Import the NHL excel file as a dataframe
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
# Select the columns 13-26, the 1st column is the index column from excel
df <- NHL[, 13:26]
fa.parallel(df, fa = "pc", n.iter = 100, show.legend = FALSE)
# Import the NHL excel file as a dataframe
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
# Select the columns 13-26, the 1st column is the index column from excel
df <- NHL[, 13:26]
fa.parallel(df, fa = "PC", n.iter = 100, show.legend = FALSE)
# Import the NHL excel file as a dataframe
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
# Select the columns 13-26, the 1st column is the index column from excel
df <- NHL[, 13:26]
fa.parallel(df, fa = "pc", n.iter = 100, show.legend = FALSE)
pc <- principal(df, nfactors = 3)
# Import the NHL excel file as a dataframe
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
# Select the columns 13-26, the 1st column is the index column from excel
df <- NHL[, 13:26]
fa.parallel(df, fa = "pc", n.iter = 100, show.legend = FALSE)
pc <- principal(df, nfactors = 3)
pc <- principal(df, nfactors = 3)
pc
View(pc)
pc <- principal(df, nfactors = 3, rotate = "none")
pc
print(pc)
pc <- principal(df, nfactors = 3, rotate = "none")
pc
str(pc)
pc <- principal(df, nfactors = 3, rotate = "none")
pc
pc <- principal(df, nfactors = 4, rotate = "none")
pc
pc <- principal(df, nfactors = 5, rotate = "none")
pc
pc <- principal(df, nfactors = 4, rotate = "none")
pc
pc <- principal(df, nfactors = 4, rotate = "varimax")
pc
pc <- principal(df, nfactors = 3, rotate = "varimax")
pc
pc <- principal(df, nfactors = 5, rotate = "varimax")
pc
pc <- principal(df, nfactors = 1, rotate = "varimax")
pc
pc <- principal(df, nfactors = 3, rotate = "varimax")
pc
pc <- principal(df, nfactors = 3, rotate = "varimax", scores = TRUE)
pc
pc$scores
View(df)
cor(df$gg, pc$scores)
# Import the NHL excel file as a dataframe
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
# Select the columns 13-26, the 1st column is the index column from excel
df <- NHL[, 13:26]
fa.parallel(df, fa = "pc", n.iter = 100, show.legend = FALSE)
pc <- principal(df, nfactors = 3, rotate = "varimax", scores = TRUE)
pc
fa.plot(pc)
library(dplyr)
library(readxl)
library(psych)
library(ggbiplot)
library(dplyr)
library(readxl)
library(psych)
install_github("vqv/ggbiplot")
library(dplyr)
library(readxl)
library(psych)
devtools::install_github("vqv/ggbiplot")
install.packages("devtools")
library(dplyr)
library(readxl)
library(psych)
library(devtools)
devtools::install_github("vqv/ggbiplot")
library(ggbiplot)
library(dplyr)
library(readxl)
library(psych)
library(ggbiplot)
ggbiplot(pc)
fa.diagram(pc)
fa <- fa.parallel(df, fa = "pc", n.iter = 100, show.legend = FALSE)
# Import the NHL excel file as a dataframe
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
# Select the columns 13-26, the 1st column is the index column from excel
df <- NHL[, 13:26]
fa <- fa.parallel(df, fa = "pc", n.iter = 100, show.legend = FALSE)
pc <- principal(df, nfactors = 3, rotate = "varimax", scores = TRUE)
pc
fa.diagram(fa)
# Import the NHL excel file as a dataframe
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
# Select the columns 13-26, the 1st column is the index column from excel
df <- NHL[, 13:26]
fa.promax <- fa.parallel(df, fa = "pc", n.iter = 100, show.legend = FALSE)
fa.diagram(fa.promax)
pc <- principal(df, nfactors = 3, rotate = "varimax", scores = TRUE)
pc
pc$scores
factor.plot(pc$scores)
factor.plot(pc)
factor.plot(pcscores)
factor.plot(pc$scores)
factor.plot(pc)
factor.plot(pc$loadings)
factor.plot(pc$factors)
factor.plot(pc)
factor.plot(pc$loadings)
factor.plot(pc)
factor.plot(fa(df))
factor.plot(fa(df), labels = colnames(df))
fa.diagram(pc)
fa.diagram(fa(df))
fa.diagram(fa(df, nfactors = 3))
fa.diagram(fa(df, nfactors = 3, rotate = "varimax", fm = "pa"))
fa.diagram(fa(df, nfactors = 3, rotate = "varimax", fm = "pa"), simple = FALSE)
factor.plot(pc)
pc <- principal(df, nfactors = 1, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc)
pc <- principal(df, nfactors = 3, rotate = "varimax", scores = TRUE)
pc
factor.plot()
factor.plot(pc)
factor.plot(pc$values)
factor.plot(pc$rotation)
factor.plot(pc$loadings)
factor.plot(pc$scores)
factor.plot(pc)
pc <- principal(df, nfactors = 1, rotate = "varimax", scores = TRUE)
pc <- principal(df, nfactors = 1, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc)
factor.plot(pc$loadings)
factor.plot(pc$lo)
factor.plot(pc)
factor.plot(pc$loadings)
pc$loadings
pc <- principal(df, nfactors = 3, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc)
pc$loadings
pc$loadings[1]
pc$loadings
pc$loadings$RC1
typeof(pc$loadings)
str(pc$loadings)
factor.plot(pc, choose = c(1))
factor.plot(pc, choose = c(2))
factor.plot(pc, choose = c(3))
factor.plot(pc, choose = c(1), labels = colnames(df))
factor.plot(pc, choose = c(1), labels = colnames(df))
factor.plot(pc, choose = c(2), labels = colnames(df))
factor.plot(pc, choose = c(3), labels = colnames(df))
factor.plot(pc, choose = c(1), labels = colnames(df), "PCA Component 1")
factor.plot(pc, choose = c(1), labels = colnames(df), title = "PCA Component 1")
factor.plot(pc, choose = c(2), labels = colnames(df), title = "PCA Component 2")
factor.plot(pc, choose = c(3), labels = colnames(df), title = "PCA Component 3")
pc <- principal(df, nfactors = 2, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc)
pc <- principal(df, nfactors = 3, rotate = "varimax", scores = TRUE)
pc
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readxl)
library(psych)
library(ggbiplot)
# Import the NHL excel file as a dataframe
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
# Select the columns 13-26, the 1st column is the index column from excel
df <- NHL[, 13:26]
fa.promax <- fa.parallel(df, fa = "pc", n.iter = 100, show.legend = FALSE)
pc <- principal(df, nfactors = 3, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc, choose = c(1), labels = colnames(df), title = "PCA Component 1")
factor.plot(pc, choose = c(2), labels = colnames(df), title = "PCA Component 2")
factor.plot(pc, choose = c(3), labels = colnames(df), title = "PCA Component 3")
pc <- principal(df, nfactors = 2, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc)
pc <- principal(df, nfactors = 3, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc, choose = c(1, 2, 3), labels = colnames(df), title = "PCA Component 1")
factor.plot(pc, choose = c(1, 2), labels = colnames(df), title = "PCA Component 1")
factor.plot(pc, choose = c(1, 2), labels = colnames(df), title = "PCA Component 1")
factor.plot(pc, choose = c(2, 3), labels = colnames(df), title = "PCA Component 2")
factor.plot(pc, choose = c(1, 3), labels = colnames(df), title = "PCA Component 3")
factor.plot(pc, choose = c(1), labels = colnames(df), title = "PCA Component 1")
factor.plot(pc, choose = c(2), labels = colnames(df), title = "PCA Component 1")
factor.plot(pc, choose = c(3), labels = colnames(df), title = "PCA Component 1")
factor.plot(pc, choose = c(1), labels = colnames(df), title = "PCA Component 1")
factor.plot(pc, choose = c(2), labels = colnames(df), title = "PCA Component 2")
factor.plot(pc, choose = c(3), labels = colnames(df), title = "PCA Component 3")
factor.plot(pc, choose = c(1), labels = colnames(df), title = "PCA Component 1")
factor.plot(pc, choose = c(2), labels = colnames(df), title = "PCA Component 2")
factor.plot(pc, choose = c(3), labels = colnames(df), title = "PCA Component 3")
factor.plot(pc, choose = c(1, 2), labels = colnames(df), title = "PCA Component 1")
factor.plot(pc, choose = c(2, 3), labels = colnames(df), title = "PCA Component 2")
factor.plot(pc, choose = c(1, 3), labels = colnames(df), title = "PCA Component 3")
# Use Parallel Analysis Scree Plots to figure out the number of factors to extract
fa.parallel(df, fa = "pc", n.iter = 100, show.legend = FALSE)
# Import the NHL excel file as a dataframe
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
# Select the columns 13-26, the 1st column is the index column from excel
df <- NHL[, 13:26]
# Use Parallel Analysis Scree Plots to figure out the number of factors to extract
fa.parallel(df, fa = "pc", n.iter = 100, show.legend = FALSE)
pc <- principal(df, nfactors = 3, rotate = "varimax", scores = TRUE)
pc
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 3, rotate = "varimax", scores = TRUE)
pc
# Use factor.plot to analyze the results
factor.plot(pc, choose = c(1, 2), labels = colnames(df), title = "PCA Component 1")
factor.plot(pc, choose = c(2, 3), labels = colnames(df), title = "PCA Component 2")
factor.plot(pc, choose = c(1, 3), labels = colnames(df), title = "PCA Component 3")
# Use factor.plot to analyze the results
factor.plot(pc, choose = c(1, 2), labels = colnames(df))
# Use factor.plot to analyze the results
factor.plot(pc, choose = c(1, 2), labels = colnames(df))
factor.plot(pc, choose = c(2, 3), labels = colnames(df))
factor.plot(pc, choose = c(1, 3), labels = colnames(df))
# Use factor.plot() to analyze the results
factor.plot(pc, choose = c(1, 2), labels = colnames(df))
factor.plot(pc, choose = c(2, 3), labels = colnames(df))
factor.plot(pc, choose = c(1, 3), labels = colnames(df))
factor.plot(pc, choose = c(1, 2))
# Use factor.plot() to analyze the results
factor.plot(pc, choose = c(1), labels = colnames(df), title = "PC1")
# Use factor.plot() to analyze the results
factor.plot(pc, choose = c(1), labels = colnames(df), title = "PC1")
factor.plot(pc, choose = c(2), labels = colnames(df), title = "PC2")
factor.plot(pc, choose = c(3), labels = colnames(df), title = "PC3")
factor.plot(pc, choose = c(1, 2), labels = colnames(df))
factor.plot(pc, choose = c(2, 3), labels = colnames(df))
factor.plot(pc, choose = c(1, 3), labels = colnames(df))
factor.plot(pc, choose = c(1, 2), labels = colnames(df))
factor.plot(pc, choose = c(2, 1), labels = colnames(df))
factor.plot(pc, choose = c(1, 2), labels = colnames(df))
factor.plot(pc, choose = c(2, 3), labels = colnames(df))
factor.plot(pc, choose = c(1, 3), labels = colnames(df))
factor.plot(pc, choose = c(1, 2), labels = colnames(df))
factor.plot(pc, choose = c(1, 3), labels = colnames(df))
factor.plot(pc, choose = c(2, 3), labels = colnames(df))
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 3, rotate = "varimax", scores = TRUE)
pc
# Import the NHL excel file as a dataframe
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
# Select the columns 13-26, the 1st column is the index column from excel
df <- NHL[, 13:26]
# Use Parallel Analysis Scree Plots to figure out the number of factors to extract
fa.parallel(df, fa = "pc", n.iter = 100, show.legend = FALSE)
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 3, rotate = "varimax", scores = TRUE)
pc
# Use factor.plot() to analyze the results
factor.plot(pc, choose = c(1), labels = colnames(df), title = "PC1")
factor.plot(pc, choose = c(2), labels = colnames(df), title = "PC2")
factor.plot(pc, choose = c(3), labels = colnames(df), title = "PC3")
factor.plot(pc, choose = c(1, 2), labels = colnames(df))
factor.plot(pc, choose = c(2, 3), labels = colnames(df))
factor.plot(pc, choose = c(1, 3), labels = colnames(df))
factor.plot(pc, choose = c(2), labels = colnames(df))
# Use factor.plot() to analyze the results
factor.plot(pc, choose = c(1, 2), labels = colnames(df))
factor.plot(pc, choose = c(2, 3), labels = colnames(df))
factor.plot(pc, choose = c(1, 3), labels = colnames(df))
library(dplyr)
library(readxl)
library(psych)
library(ggbiplot)
# Import the NHL excel file as a dataframe
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
# Select the columns 13-26, the 1st column is the index column from excel
df <- NHL[, 13:26]
# Use Parallel Analysis Scree Plots to figure out the number of factors to extract
fa.parallel(df, fa = "pc", n.iter = 100, show.legend = FALSE)
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 3, rotate = "varimax", scores = TRUE)
pc
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 1, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc)
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 2, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc, labels = colnames(df))
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 2, scores = TRUE)
pc
factor.plot(pc, labels = colnames(df))
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 2, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc, labels = colnames(df))
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 2, scores = TRUE)
pc
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 2, rotate = "varimax", scores = TRUE)
pc
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 2, scores = TRUE)
pc
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 2, rotate = "varimax", scores = TRUE)
pc
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 2, rotate = "none", scores = TRUE)
pc
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 2, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc, labels = colnames(df))
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 1, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc, labels = colnames(df))
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 2, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc, labels = colnames(df))
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 3, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc, labels = colnames(df))
# Use factor.plot() to analyze the results
factor.plot(pc, choose = c(1, 2), labels = colnames(df))
factor.plot(pc, choose = c(2, 3), labels = colnames(df))
factor.plot(pc, choose = c(1, 3), labels = colnames(df))
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 2, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc, labels = colnames(df))
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 3, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc, labels = colnames(df))
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 4, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc, labels = colnames(df))
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 5, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc, labels = colnames(df))
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 5, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc, labels = colnames(df))
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 2, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc, labels = colnames(df))
# Use Parallel Analysis Scree Plots to figure out the number of factors to extract
fa.parallel(NHL, fa = "pc", n.iter = 100, show.legend = FALSE)
# Use Parallel Analysis Scree Plots to figure out the number of factors to extract
fa.parallel(NHL[, 3:], fa = "pc", n.iter = 100, show.legend = FALSE)
# Use Parallel Analysis Scree Plots to figure out the number of factors to extract
fa.parallel(NHL[, 3:26], fa = "pc", n.iter = 100, show.legend = FALSE)
# Use Parallel Analysis Scree Plots to figure out the number of factors to extract
fa.parallel(NHL[, 4:], fa = "pc", n.iter = 100, show.legend = FALSE)
# Use Parallel Analysis Scree Plots to figure out the number of factors to extract
fa.parallel(NHL[, 4:26], fa = "pc", n.iter = 100, show.legend = FALSE)
# Import the NHL excel file as a dataframe
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
# Select the columns 13-26, the 1st column is the index column from excel
df <- NHL[, 13:26]
# Use Parallel Analysis Scree Plots to figure out the number of factors to extract
fa.parallel(df, fa = "pc", n.iter = 100, show.legend = FALSE)
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 7, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc, labels = colnames(df))
# Use factor.plot() to analyze the results
factor.plot(pc, choose = c(1, 2, 3), labels = colnames(df))
# Use factor.plot() to analyze the results
factor.plot(pc, choose = c(1, 6), labels = colnames(df))
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 1, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc, labels = colnames(df))
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 2, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc, labels = colnames(df))
library(dplyr)
library(readxl)
library(psych)
library(ggbiplot)
# Import the NHL excel file as a dataframe
NHL <- data.frame(read_xlsx("./data/NHL.xlsx", sheet = "Data"))
# Select the columns 13-26, the 1st column is the index column from excel
df <- NHL[, 13:26]
# Use Parallel Analysis Scree Plots to figure out the number of factors to extract
fa.parallel(df, fa = "pc", n.iter = 100, show.legend = FALSE)
# Perform PCA with varimax orthogonal rotation
pc <- principal(df, nfactors = 1, rotate = "varimax", scores = TRUE)
pc
factor.plot(pc, labels = colnames(df))
